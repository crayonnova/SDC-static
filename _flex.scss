$breakpoints: (
  's': 576px,
  'm': 768px,
  'l': 992px,
);

.flex {
  display: flex !important;
}

@mixin responsive($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

// Flex Direction
@each $dir in (row, row-reverse, column, column-reverse) {
  .flex-#{$dir} {
    flex-direction: $dir !important;
  }
  @each $breakpoint in map-keys($breakpoints) {
    @include responsive($breakpoint) {
      .flex-#{$breakpoint}-#{$dir} {
        flex-direction: $dir !important;
      }
    }
  }
}

@each $justify in (start, end, center, between, around, evenly) {
  .justify-content-#{$justify} {
    justify-content: #{$justify} !important;
  }
  @each $breakpoint in map-keys($breakpoints) {
    @include responsive($breakpoint) {
      .justify-content-#{$breakpoint}-#{$justify} {
        justify-content: #{$justify} !important;
      }
    }
  }
}

@each $align in (start, end, center, baseline, stretch) {
  .align-items-#{$align} {
    align-items: #{$align} !important;
  }
  @each $breakpoint in map-keys($breakpoints) {
    @include responsive($breakpoint) {
      .align-items-#{$breakpoint}-#{$align} {
        align-items: #{$align} !important;
      }
    }
  }
}

@each $wrap in (wrap, nowrap, wrap-reverse) {
  .flex-#{$wrap} {
    flex-wrap: $wrap !important;
  }
  @each $breakpoint in map-keys($breakpoints) {
    @include responsive($breakpoint) {
      .flex-#{$breakpoint}-#{$wrap} {
        flex-wrap: $wrap !important;
      }
    }
  }
}

@for $i from 1 through 10 {
  .gap-#{$i} {
    gap: $i * 1rem;
  }
}